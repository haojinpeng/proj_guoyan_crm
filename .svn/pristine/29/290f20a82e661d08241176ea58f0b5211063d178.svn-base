package com.it.controller;

import com.it.bean.PageBean;
import com.it.bean.User;
import com.it.bean.User_Role;
import com.it.services.IUserServices;
import com.it.services.UserServicesImpl;
import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;

@WebServlet(name = "UserqueryServlet",urlPatterns = {"/coustant.do"})
public class UserqueryServlet extends HttpServlet {
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        //处理乱码
        response.setContentType("application/json; charset=utf-8");
        PrintWriter out = response.getWriter();

        //获取页面上的值
        String opt=request.getParameter("opt");
        String id=request.getParameter("id");
        String employee_number=request.getParameter("employee_number");
        String username = request.getParameter("username");
        String payroll=request.getParameter("payroll");
        String age = request.getParameter("age");
        String sex = request.getParameter("sex");
        String tel = request.getParameter("tel");
        String address=request.getParameter("address");
        String employee=request.getParameter("employee");
        String name = request.getParameter("name");

        //生成对象
        User user = new User();
        IUserServices services = new UserServicesImpl();
        String flags = "1";
/**
 * 批量删除操作
 * */
        if ("dels".equals(opt)) {
            //获取前端页面的id集合
            String delIds = request.getParameter("delArray");
            System.out.println("delIds--->" + delIds);
            JSONObject result = new JSONObject();
            int delNums = 0;
            // "" null
            if (!"".equals(id) && id != null) {
                user.setId(Long.parseLong(id));
                //执行删除单个
                services.del(user);
                delNums = 1;
            } else {
                delNums = services.Deletess(delIds);
            }

            if (delNums > 0) {
                result.put("success", true);
                result.put("delNums", delNums);
            } else {
                result.put("errorMsg", "删除失败");
            }
            out.print(result);
        }

        //删除单个功能
        if("del".equals(opt)){
            //获取前端页面的sno
            //判断
            if(!"".equals(id)&&id!=null){
                user.setId(Long.parseLong(id));
            }

            boolean flag = services.del(user);

            if(!flag){
                flags="0";
            }
            out.print(flags);

        }
//查询所有用户和角色

        if("relo".equals(opt)){
            // 存放集合内容
User_Role user_role = new User_Role();
            List<User_Role> lists= null;
            //page 当前页码

            String page = request.getParameter("page");
            //limit pageSize
            String rows = request.getParameter("limit");

            PageBean pageBean = new PageBean(Integer.parseInt(page), Integer.parseInt(rows));

            //查询所有信息默认分页

            lists = services.queryAllUsrole(pageBean,user_role);
            //查询总记录数
            int total = services.userCount(user);
            JSONObject result = new JSONObject();
            JSONArray jsonArray = JSONArray.fromObject(lists);
            result.put("code", 0);
            result.put("msg", "正在加载....");
            result.put("count", total);
            result.put("data", jsonArray);
            System.out.println(result.toString());
            out.print(result);
            return;
        }

        //修改
        if("upd".equals(opt)) {
            //判断
            if (!"".equals(id) && id != null) {
                user.setId(Long.parseLong(id));
            }
            if (!"".equals(employee_number) && employee_number != null) {
                user.setEmployee_number(employee_number);
            }
            if (!"".equals(username) && username != null) {
                user.setUsername(username);
            }
            if (!"".equals(payroll) && payroll != null) {
                user.setPayroll(payroll);
            }
            if (!"".equals(age) && age != null) {
                user.setAge(Integer.parseInt(age));
            }
            if (!"".equals(sex) && sex != null) {
                user.setSex(Integer.parseInt(sex));
            }
            if (!"".equals(tel) && tel != null) {
                user.setTel(tel);
            }
            if (!"".equals(address) && address != null) {
                user.setAddress(address);
            }
            boolean flag = services.updateb(user);
            if(!flag){
                flags="0";

            }
            System.out.println(flags);
            out.print(flags);
        }
        //查询所有

        if("queryAll".equals(opt)){
            // 存放集合内容
//            List<String> list = null;
            List<User> lists= null;
//            String time = "'"+start + "' and '" + end +"'";
            //page 当前页码
            if (!"".equals(employee) && employee != null) {
                user.setEmployee_number(employee);
            }
            if (!"".equals(name) && name != null) {
                user.setUsername(name);
            }
            System.out.println(employee_number);
            System.out.println(username);
            String page = request.getParameter("page");
            //limit pageSize
            String rows = request.getParameter("limit");

//            if(!"".equals(username)&&username!=null){
//                bills.setUsername(username);
//            }

            PageBean pageBean = new PageBean(Integer.parseInt(page), Integer.parseInt(rows));

            //查询所有信息默认分页

            lists = services.queryAllUser(pageBean,user);
            //查询总记录数
//            System.out.println("22222");
            int total = services.userCount(user);
            JSONObject result = new JSONObject();
            JSONArray jsonArray = JSONArray.fromObject(lists);
            result.put("code", 0);
            result.put("msg", "正在加载....");
            result.put("count", total);
            result.put("data", jsonArray);
            System.out.println(result.toString());
            out.print(result);
            return;
        }
    }

    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
doPost(request,response);
    }
}
